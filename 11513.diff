diff --git a/rosen/test/render_service/BUILD.gn b/rosen/test/render_service/BUILD.gn
index 6b5eabb1bd4e2b0ed8a9a01ed2a6a948c90825d0..7fffd92911dcb372a7dbf391b3468cdcd1a7e19a 100755
--- a/rosen/test/render_service/BUILD.gn
+++ b/rosen/test/render_service/BUILD.gn
@@ -25,9 +25,11 @@ group("test") {
     "render_service/unittest/screen_manager:unittest",
     "render_service/unittest/system:unittest",
     "render_service/unittest/transaction:unittest",
+    "render_service_base/fuzztest/bufferclearcallbackstub_fuzzer:fuzztest",
     "render_service_base/fuzztest/pipeline/rspipelinerender_fuzzer:fuzztest",
     "render_service_base/fuzztest/pipeline/rsrendernode_fuzzer:fuzztest",
     "render_service_base/fuzztest/render/rspixelmapshader_fuzzer:fuzztest",
+    "render_service_base/fuzztest/rsanimationratedecider_fuzzer:fuzztest",
     "render_service_base/fuzztest/rsbackgroundthread_fuzzer:fuzztest",
     "render_service_base/fuzztest/rsbasecommon_fuzzer:fuzztest",
     "render_service_base/fuzztest/rsbasescreenmanager_fuzzer:fuzztest",
diff --git a/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/BUILD.gn b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/BUILD.gn
new file mode 100755
index 0000000000000000000000000000000000000000..4571f7e2ead7e76e70b862ca311b8acc74c22441
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/BUILD.gn
@@ -0,0 +1,59 @@
+# Copyright (c) 2024 Huawei Device Co., Ltd.
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+#####################hydra-fuzz###################
+import("//build/config/features.gni")
+import("//build/test.gni")
+module_output_path = "graphic_2d/graphic_2d"
+
+##############################fuzztest##########################################
+ohos_fuzztest("BufferClearCallbackStubFuzzTest") {
+  module_out_path = module_output_path
+  fuzz_config_file = "../../../../../test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer"
+  include_dirs = [
+    "../../../../../modules/render_service_base/src",
+    "../../../../../modules/2d_graphics/include",
+    "../../../../../modules/render_service_base/include",
+  ]
+  deps = [
+    "../../../../../modules/2d_graphics:2d_graphics",
+    "../../../../../modules/render_service:librender_service",
+    "../../../../../modules/render_service_base:librender_service_base",
+    "../../../../../modules/render_service_base:librender_service_base_static",
+    "../../../../../modules/render_service_client:librender_service_client",
+  ]
+  external_deps = [
+    "c_utils:utils",
+    "hilog:libhilog",
+  ]
+  cflags = [
+    "-g",
+    "-O0",
+    "-Wno-unused-variable",
+    "-fno-omit-frame-pointer",
+    "-Dprivate=public",
+    "-Dprotected=public",
+  ]
+  sources = [ "bufferclearcallbackstub_fuzzer.cpp" ]
+}
+
+###############################################################################
+group("fuzztest") {
+  testonly = true
+  deps = []
+  deps += [
+    # deps file
+    ":BufferClearCallbackStubFuzzTest",
+  ]
+}
+###############################################################################
diff --git a/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/bufferclearcallbackstub_fuzzer.cpp b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/bufferclearcallbackstub_fuzzer.cpp
new file mode 100755
index 0000000000000000000000000000000000000000..76a9bb5b28423fff3aa1748be83b50241b57c0d0
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/bufferclearcallbackstub_fuzzer.cpp
@@ -0,0 +1,86 @@
+/*
+ * Copyright (c) 2024 Huawei Device Co., Ltd.
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "bufferclearcallbackstub_fuzzer.h"
+
+#include <climits>
+#include <cstddef>
+#include <cstdint>
+#include <cstdio>
+#include <cstdlib>
+#include <fcntl.h>
+#include <hilog/log.h>
+#include <message_option.h>
+#include <message_parcel.h>
+#include <securec.h>
+#include <unistd.h>
+
+#include "ipc_callbacks/buffer_clear_callback_stub.h"
+namespace OHOS {
+namespace Rosen {
+namespace {
+const uint8_t* g_data = nullptr;
+size_t g_size = 0;
+size_t g_pos;
+} // namespace
+
+template<class T>
+T GetData()
+{
+    T object {};
+    size_t objectSize = sizeof(object);
+    if (g_data == nullptr || objectSize > g_size - g_pos) {
+        return object;
+    }
+    errno_t ret = memcpy_s(&object, objectSize, g_data + g_pos, objectSize);
+    if (ret != EOK) {
+        return {};
+    }
+    g_pos += objectSize;
+    return object;
+}
+bool DoSomethingInterestingWithMyAPI(const uint8_t* data, size_t size)
+{
+    if (data == nullptr) {
+        return false;
+    }
+
+    // initialize
+    g_data = data;
+    g_size = size;
+    g_pos = 0;
+
+    uint32_t code = GetData<uint32_t>();
+    MessageParcel messageParcel;
+    MessageParcel reply;
+    MessageOption option;
+    class MyBufferClearCallbackStub : public OHOS::Rosen::RSBufferClearCallbackStub {
+    public:
+        void OnBufferClear() override {}
+    };
+    MyBufferClearCallbackStub myBufferClearCallbackStub;
+    myBufferClearCallbackStub.OnRemoteRequest(code, messageParcel, reply, option);
+    return true;
+}
+} // namespace Rosen
+} // namespace OHOS
+
+/* Fuzzer entry point */
+extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)
+{
+    /* Run your code on data */
+    OHOS::Rosen::DoSomethingInterestingWithMyAPI(data, size);
+    return 0;
+}
diff --git a/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/bufferclearcallbackstub_fuzzer.h b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/bufferclearcallbackstub_fuzzer.h
new file mode 100755
index 0000000000000000000000000000000000000000..9c97f4feafa182e62995543f62c5033b9375143b
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/bufferclearcallbackstub_fuzzer.h
@@ -0,0 +1,20 @@
+/*
+ * Copyright (c) 2024 Huawei Device Co., Ltd.
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#ifndef BUFFERCLEARCALLBACKSTUB_FUZZER_H
+#define BUFFERCLEARCALLBACKSTUB_FUZZER_H
+
+#define FUZZ_PROJECT_NAME "bufferclearcallbackstub_fuzzer"
+
+#endif // BUFFERCLEARCALLBACKSTUB_FUZZER_H
\ No newline at end of file
diff --git a/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/corpus/init b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/corpus/init
new file mode 100755
index 0000000000000000000000000000000000000000..e7c3fecd8d4d4816e40088113a2316bb9eb2e13f
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/corpus/init
@@ -0,0 +1,14 @@
+# Copyright (c) 2024 Huawei Device Co., Ltd.
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+FUZZ
\ No newline at end of file
diff --git a/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/project.xml b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/project.xml
new file mode 100755
index 0000000000000000000000000000000000000000..61d63a0715de022600b3ff9465d20223551325c8
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/bufferclearcallbackstub_fuzzer/project.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (c) 2024 Huawei Device Co., Ltd.
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<fuzz_config>
+  <fuzztest>
+    <!-- maximum length of a test input -->
+    <max_len>1000</max_len>
+    <!-- maximum total time in seconds to run the fuzzer -->
+    <max_total_time>300</max_total_time>
+    <!-- memory usage limit in Mb -->
+    <rss_limit_mb>4096</rss_limit_mb>
+  </fuzztest>
+</fuzz_config>
diff --git a/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/BUILD.gn b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/BUILD.gn
new file mode 100755
index 0000000000000000000000000000000000000000..975de87e760551dfcecc36c0176355f5ad7567b4
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/BUILD.gn
@@ -0,0 +1,58 @@
+# Copyright (c) 2024 Huawei Device Co., Ltd.
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+#####################hydra-fuzz###################
+import("//build/config/features.gni")
+import("//build/test.gni")
+module_output_path = "graphic_2d/graphic_2d"
+
+##############################fuzztest##########################################
+ohos_fuzztest("RSAnimationRateDeciderFuzzTest") {
+  module_out_path = module_output_path
+  fuzz_config_file = "../../../../../test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer"
+  include_dirs = [
+    "../../../../../modules/render_service_base/src",
+    "../../../../../modules/2d_graphics/include",
+    "../../../../../modules/render_service_base/include",
+  ]
+  deps = [
+    "../../../../../modules/2d_graphics:2d_graphics",
+    "../../../../../modules/render_service:librender_service",
+    "../../../../../modules/render_service_base:librender_service_base",
+    "../../../../../modules/render_service_client:librender_service_client",
+  ]
+  external_deps = [
+    "c_utils:utils",
+    "hilog:libhilog",
+  ]
+  cflags = [
+    "-g",
+    "-O0",
+    "-Wno-unused-variable",
+    "-fno-omit-frame-pointer",
+    "-Dprivate=public",
+    "-Dprotected=public",
+  ]
+  sources = [ "rsanimationratedecider_fuzzer.cpp" ]
+}
+
+###############################################################################
+group("fuzztest") {
+  testonly = true
+  deps = []
+  deps += [
+    # deps file
+    ":RSAnimationRateDeciderFuzzTest",
+  ]
+}
+###############################################################################
diff --git a/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/corpus/init b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/corpus/init
new file mode 100755
index 0000000000000000000000000000000000000000..e7c3fecd8d4d4816e40088113a2316bb9eb2e13f
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/corpus/init
@@ -0,0 +1,14 @@
+# Copyright (c) 2024 Huawei Device Co., Ltd.
+# Licensed under the Apache License, Version 2.0 (the "License");
+# you may not use this file except in compliance with the License.
+# You may obtain a copy of the License at
+#
+#     http://www.apache.org/licenses/LICENSE-2.0
+#
+# Unless required by applicable law or agreed to in writing, software
+# distributed under the License is distributed on an "AS IS" BASIS,
+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+# See the License for the specific language governing permissions and
+# limitations under the License.
+
+FUZZ
\ No newline at end of file
diff --git a/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/project.xml b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/project.xml
new file mode 100755
index 0000000000000000000000000000000000000000..61d63a0715de022600b3ff9465d20223551325c8
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/project.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!-- Copyright (c) 2024 Huawei Device Co., Ltd.
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+<fuzz_config>
+  <fuzztest>
+    <!-- maximum length of a test input -->
+    <max_len>1000</max_len>
+    <!-- maximum total time in seconds to run the fuzzer -->
+    <max_total_time>300</max_total_time>
+    <!-- memory usage limit in Mb -->
+    <rss_limit_mb>4096</rss_limit_mb>
+  </fuzztest>
+</fuzz_config>
diff --git a/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/rsanimationratedecider_fuzzer.cpp b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/rsanimationratedecider_fuzzer.cpp
new file mode 100755
index 0000000000000000000000000000000000000000..171420bd8fba86048c459f82776a5b37b9d78ad0
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/rsanimationratedecider_fuzzer.cpp
@@ -0,0 +1,100 @@
+/*
+ * Copyright (c) 2024 Huawei Device Co., Ltd.
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+#include "rsanimationratedecider_fuzzer.h"
+
+#include <climits>
+#include <cstddef>
+#include <cstdint>
+#include <cstdio>
+#include <cstdlib>
+#include <fcntl.h>
+#include <hilog/log.h>
+#include <memory>
+#include <securec.h>
+#include <unistd.h>
+
+#include "animation/rs_animation_rate_decider.h"
+#include "modifier/rs_render_property.h"
+
+namespace OHOS {
+namespace Rosen {
+namespace {
+const uint8_t* g_data = nullptr;
+size_t g_size = 0;
+size_t g_pos;
+} // namespace
+
+template<class T>
+T GetData()
+{
+    T object {};
+    size_t objectSize = sizeof(object);
+    if (g_data == nullptr || objectSize > g_size - g_pos) {
+        return object;
+    }
+    errno_t ret = memcpy_s(&object, objectSize, g_data + g_pos, objectSize);
+    if (ret != EOK) {
+        return {};
+    }
+    g_pos += objectSize;
+    return object;
+}
+bool DoSomethingInterestingWithMyAPI(const uint8_t* data, size_t size)
+{
+    if (data == nullptr) {
+        return false;
+    }
+
+    // initialize
+    g_data = data;
+    g_size = size;
+    g_pos = 0;
+    float width = GetData<float>();
+    float height = GetData<float>();
+    uint64_t id = GetData<uint64_t>();
+    int min = GetData<int>();
+    int max = GetData<int>();
+    int preferred = GetData<int>();
+    PropertyValue velocity;
+    FrameRateRange range(min, max, preferred);
+    RSAnimationRateDecider rsAnimationRateDecider;
+    rsAnimationRateDecider.SetEnable(true);
+    rsAnimationRateDecider.SetScaleReferenceSize(width, height);
+    rsAnimationRateDecider.Reset();
+    rsAnimationRateDecider.AddDecisionElement(id, velocity, range);
+    rsAnimationRateDecider.MakeDecision([](const RSPropertyUnit unit, float velocity) -> int32_t { return 0; });
+    rsAnimationRateDecider.GetFrameRateRange();
+    auto frameRateGetFunc = [](const RSPropertyUnit unit, float velocity) -> int32_t { return 0; };
+    PropertyValue property = std::make_shared<RSRenderAnimatableProperty<float>>(
+        0.0, 1, RSRenderPropertyType::PROPERTY_FLOAT, RSPropertyUnit::PIXEL_POSITION);
+    RSRenderPropertyType type = RSRenderPropertyType::PROPERTY_VECTOR4F;
+    property->SetPropertyType(type);
+    rsAnimationRateDecider.CalculatePreferredRate(property, frameRateGetFunc);
+    type = RSRenderPropertyType::PROPERTY_VECTOR2F;
+    property->SetPropertyType(type);
+    rsAnimationRateDecider.CalculatePreferredRate(property, frameRateGetFunc);
+    return true;
+}
+} // namespace Rosen
+} // namespace OHOS
+
+/* Fuzzer entry point */
+extern "C" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)
+{
+    /* Run your code on data */
+    OHOS::Rosen::DoSomethingInterestingWithMyAPI(data, size);
+    return 0;
+}
diff --git a/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/rsanimationratedecider_fuzzer.h b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/rsanimationratedecider_fuzzer.h
new file mode 100755
index 0000000000000000000000000000000000000000..1f78fd4afaedaa0f068325526c12fc11168d3905
--- /dev/null
+++ b/rosen/test/render_service/render_service_base/fuzztest/rsanimationratedecider_fuzzer/rsanimationratedecider_fuzzer.h
@@ -0,0 +1,20 @@
+/*
+ * Copyright (c) 2024 Huawei Device Co., Ltd.
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+#ifndef RSANIMATIONRATEDECIDER_FUZZER_H
+#define RSANIMATIONRATEDECIDER_FUZZER_H
+
+#define FUZZ_PROJECT_NAME "rsanimationratedecider_fuzzer"
+
+#endif // RSANIMATIONRATEDECIDER_FUZZER_H
\ No newline at end of file
