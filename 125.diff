diff --git a/interfaces/inner_api/surface/ibuffer_producer.h b/interfaces/inner_api/surface/ibuffer_producer.h
index 266f3acc7eb23dccc2d824c020a6ea325ef26882..2a4265faba53465fe167da0e1b449564d3acb002 100644
--- a/interfaces/inner_api/surface/ibuffer_producer.h
+++ b/interfaces/inner_api/surface/ibuffer_producer.h
@@ -95,8 +95,8 @@ public:
 
     virtual GSError GetTransform(GraphicTransformType &transform) = 0;
 
-    virtual GSError AttachBufferToQueue(sptr<SurfaceBuffer>& buffer) = 0;
-    virtual GSError DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer) = 0;
+    virtual GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer) = 0;
+    virtual GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer) = 0;
     virtual GSError GetTransformHint(GraphicTransformType &transformHint) = 0;
     virtual GSError SetTransformHint(GraphicTransformType transformHint) = 0;
     DECLARE_INTERFACE_DESCRIPTOR(u"surf.IBufferProducer");
diff --git a/interfaces/inner_api/surface/iconsumer_surface.h b/interfaces/inner_api/surface/iconsumer_surface.h
index 88b53d62e28775ef26d8d7c0c448a8e9eb9aa5ac..a83ae51bd748d35f8b18e5bd4566f47ec514b770 100644
--- a/interfaces/inner_api/surface/iconsumer_surface.h
+++ b/interfaces/inner_api/surface/iconsumer_surface.h
@@ -127,8 +127,8 @@ public:
     virtual GSError RegisterSurfaceDelegator(sptr<IRemoteObject> client) = 0;
     virtual GSError RegisterReleaseListener(OnReleaseFuncWithFence func) = 0;
     virtual void ConsumerRequestCpuAccess(bool on) = 0;
-    virtual GSError AttachBufferToQueue(sptr<SurfaceBuffer>& buffer) = 0;
-    virtual GSError DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer) = 0;
+    virtual GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer) = 0;
+    virtual GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer) = 0;
 protected:
     IConsumerSurface() = default;
 };
diff --git a/interfaces/inner_api/surface/surface.h b/interfaces/inner_api/surface/surface.h
index d2f702a8ce29361513bbb7ee0b850d5dda43791c..be837359376102d7cecb3c31145da1b5f182a469 100644
--- a/interfaces/inner_api/surface/surface.h
+++ b/interfaces/inner_api/surface/surface.h
@@ -129,8 +129,8 @@ public:
     virtual GSError UnRegisterUserDataChangeListener(const std::string &funcName) = 0;
     virtual GSError ClearUserDataChangeListener() = 0;
 
-    virtual GSError AttachBufferToQueue(sptr<SurfaceBuffer>& buffer) = 0;
-    virtual GSError DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer) = 0;
+    virtual GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer) = 0;
+    virtual GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer) = 0;
 
     virtual GraphicTransformType GetTransformHint() const = 0;
     virtual GSError SetTransformHint(GraphicTransformType transformHint) = 0;
diff --git a/surface/include/buffer_client_producer.h b/surface/include/buffer_client_producer.h
index 8f03d8840db2c455398550d0a1e8acc9c4efae72..552decd190b152bd788cd1307855b23b2e1dafe0 100644
--- a/surface/include/buffer_client_producer.h
+++ b/surface/include/buffer_client_producer.h
@@ -80,8 +80,8 @@ public:
     GSError SendAddDeathRecipientObject() override;
 
     GSError GetTransform(GraphicTransformType &transform) override;
-    GSError AttachBufferToQueue(sptr<SurfaceBuffer>& buffer) override;
-    GSError DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer) override;
+    GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer) override;
+    GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer) override;
 
     GSError GetTransformHint(GraphicTransformType &transformHint) override;
     GSError SetTransformHint(GraphicTransformType transformHint) override;
diff --git a/surface/include/buffer_queue.h b/surface/include/buffer_queue.h
index a03487e745c5bb0264ea3442218f8fba9a3bcec8..79bc2c48fa672db14894484616d4e2348fb09577 100644
--- a/surface/include/buffer_queue.h
+++ b/surface/include/buffer_queue.h
@@ -151,8 +151,8 @@ public:
         isCpuAccessable_ = on;
     }
 
-    GSError AttachBufferToQueue(sptr<SurfaceBuffer> &buffer, InvokerType invokerType);
-    GSError DetachBufferFromQueue(sptr<SurfaceBuffer> &buffer, InvokerType invokerType);
+    GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer, InvokerType invokerType);
+    GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer, InvokerType invokerType);
 
     GSError SetTransformHint(GraphicTransformType transformHint);
     GraphicTransformType GetTransformHint() const;
diff --git a/surface/include/buffer_queue_consumer.h b/surface/include/buffer_queue_consumer.h
index 06c9b02051be50a59d62289ee89d89bec196d53a..0d2f5b0cb589d2cd9830004f1dc4ef7f81a8f335 100644
--- a/surface/include/buffer_queue_consumer.h
+++ b/surface/include/buffer_queue_consumer.h
@@ -67,8 +67,8 @@ public:
         bufferQueue_->ConsumerRequestCpuAccess(on);
     }
 
-    GSError AttachBufferToQueue(sptr<SurfaceBuffer>& buffer);
-    GSError DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer);
+    GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer);
+    GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer);
 
 private:
     sptr<BufferQueue> bufferQueue_ = nullptr;
diff --git a/surface/include/buffer_queue_producer.h b/surface/include/buffer_queue_producer.h
index 2a730ed3dccd6997552d271ce368ffb1e7dc59f9..989b14289a7d0f3fd48bb1fd1229bfe5719e3e49 100644
--- a/surface/include/buffer_queue_producer.h
+++ b/surface/include/buffer_queue_producer.h
@@ -92,8 +92,8 @@ public:
 
     GSError SendAddDeathRecipientObject() override;
     void OnBufferProducerRemoteDied();
-    GSError AttachBufferToQueue(sptr<SurfaceBuffer>& buffer) override;
-    GSError DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer) override;
+    GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer) override;
+    GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer) override;
 
     GSError SetTransformHint(GraphicTransformType transformHint) override;
     GSError GetTransformHint(GraphicTransformType &transformHint) override;
diff --git a/surface/include/consumer_surface.h b/surface/include/consumer_surface.h
index 712293b731134f1f13d52118320a8c8f206ea2a8..14e65ea95b4bbc21e81aa48a6d99ed5d856427b9 100644
--- a/surface/include/consumer_surface.h
+++ b/surface/include/consumer_surface.h
@@ -127,8 +127,8 @@ public:
     GSError UnRegisterUserDataChangeListener(const std::string &funcName) override;
     GSError ClearUserDataChangeListener() override;
     void ConsumerRequestCpuAccess(bool on) override;
-    GSError AttachBufferToQueue(sptr<SurfaceBuffer>& buffer) override;
-    GSError DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer) override;
+    GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer) override;
+    GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer) override;
     GraphicTransformType GetTransformHint() const override;
     GSError SetTransformHint(GraphicTransformType transformHint) override;
 
diff --git a/surface/include/producer_surface.h b/surface/include/producer_surface.h
index 735c098b1ee75cec005acdb184af448c7b00910b..334fa9b373e016b803a88f3e372d96f0bfa47ef5 100644
--- a/surface/include/producer_surface.h
+++ b/surface/include/producer_surface.h
@@ -129,8 +129,8 @@ public:
     GSError RegisterUserDataChangeListener(const std::string &funcName, OnUserDataChangeFunc func) override;
     GSError UnRegisterUserDataChangeListener(const std::string &funcName) override;
     GSError ClearUserDataChangeListener() override;
-    GSError AttachBufferToQueue(sptr<SurfaceBuffer>& buffer) override;
-    GSError DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer) override;
+    GSError AttachBufferToQueue(sptr<SurfaceBuffer> buffer) override;
+    GSError DetachBufferFromQueue(sptr<SurfaceBuffer> buffer) override;
     GraphicTransformType GetTransformHint() const override;
     GSError SetTransformHint(GraphicTransformType transformHint) override;
 
diff --git a/surface/src/buffer_client_producer.cpp b/surface/src/buffer_client_producer.cpp
index 3798ae7bfe194d80f2bc894ecf5e78503575dcda..bac88eac8c5a58c2af0ac1b5d8d2f5cc6daa9c00 100644
--- a/surface/src/buffer_client_producer.cpp
+++ b/surface/src/buffer_client_producer.cpp
@@ -179,7 +179,7 @@ GSError BufferClientProducer::FlushBuffer(uint32_t sequence, sptr<BufferExtraDat
     return GSERROR_OK;
 }
 
-GSError BufferClientProducer::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
+GSError BufferClientProducer::AttachBufferToQueue(sptr<SurfaceBuffer> buffer)
 {
     DEFINE_MESSAGE_VARIABLES(arguments, reply, option, BLOGE);
     uint32_t sequence = buffer->GetSeqNum();
@@ -194,7 +194,7 @@ GSError BufferClientProducer::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
     return GSERROR_OK;
 }
 
-GSError BufferClientProducer::DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer)
+GSError BufferClientProducer::DetachBufferFromQueue(sptr<SurfaceBuffer> buffer)
 {
     DEFINE_MESSAGE_VARIABLES(arguments, reply, option, BLOGE);
     uint32_t sequence = buffer->GetSeqNum();
diff --git a/surface/src/buffer_queue.cpp b/surface/src/buffer_queue.cpp
index c72c0c2780d7d1ca33b0edf5f755054582c13600..ec5039e5f20a7f376c5abeec56de4d8dbd1c65c3 100644
--- a/surface/src/buffer_queue.cpp
+++ b/surface/src/buffer_queue.cpp
@@ -881,7 +881,7 @@ void BufferQueue::AttachBufferUpdateBufferInfo(sptr<SurfaceBuffer>& buffer)
     buffer->SetSurfaceBufferHeight(buffer->GetHeight());
 }
 
-GSError BufferQueue::AttachBufferToQueue(sptr<SurfaceBuffer> &buffer, InvokerType invokerType)
+GSError BufferQueue::AttachBufferToQueue(sptr<SurfaceBuffer> buffer, InvokerType invokerType)
 {
     ScopedBytrace func(__func__);
     if (buffer == nullptr) {
@@ -917,7 +917,7 @@ GSError BufferQueue::AttachBufferToQueue(sptr<SurfaceBuffer> &buffer, InvokerTyp
     return GSERROR_OK;
 }
 
-GSError BufferQueue::DetachBufferFromQueue(sptr<SurfaceBuffer> &buffer, InvokerType invokerType)
+GSError BufferQueue::DetachBufferFromQueue(sptr<SurfaceBuffer> buffer, InvokerType invokerType)
 {
     ScopedBytrace func(__func__);
     if (buffer == nullptr) {
diff --git a/surface/src/buffer_queue_consumer.cpp b/surface/src/buffer_queue_consumer.cpp
index 0e2a6d3be5a2e42282c3a36c6cbc042935d928f3..dd2ac62d92059fa5be806f9b3479e46bf869070d 100644
--- a/surface/src/buffer_queue_consumer.cpp
+++ b/surface/src/buffer_queue_consumer.cpp
@@ -45,7 +45,7 @@ GSError BufferQueueConsumer::ReleaseBuffer(sptr<SurfaceBuffer>& buffer, const sp
     return bufferQueue_->ReleaseBuffer(buffer, fence);
 }
 
-GSError BufferQueueConsumer::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
+GSError BufferQueueConsumer::AttachBufferToQueue(sptr<SurfaceBuffer> buffer)
 {
     if (bufferQueue_ == nullptr) {
         return GSERROR_INVALID_ARGUMENTS;
@@ -53,7 +53,7 @@ GSError BufferQueueConsumer::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
     return bufferQueue_->AttachBufferToQueue(buffer, InvokerType::CONSUMER_INVOKER);
 }
 
-GSError BufferQueueConsumer::DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer)
+GSError BufferQueueConsumer::DetachBufferFromQueue(sptr<SurfaceBuffer> buffer)
 {
     if (bufferQueue_ == nullptr) {
         return GSERROR_INVALID_ARGUMENTS;
diff --git a/surface/src/buffer_queue_producer.cpp b/surface/src/buffer_queue_producer.cpp
index 2004462a0c9f10b82e0eb5b91d2d55e73b44f528..74da9120337007bedaf1a27ec0f33bfe186d34ab 100644
--- a/surface/src/buffer_queue_producer.cpp
+++ b/surface/src/buffer_queue_producer.cpp
@@ -225,7 +225,7 @@ int32_t BufferQueueProducer::GetLastFlushedBufferRemote(MessageParcel &arguments
 int32_t BufferQueueProducer::AttachBufferToQueueRemote(MessageParcel &arguments,
     MessageParcel &reply, MessageOption &option)
 {
-    sptr<SurfaceBuffer> buffer;
+    sptr<SurfaceBuffer> buffer = nullptr;
     uint32_t sequence;
     GSError ret = ReadSurfaceBufferImpl(arguments, sequence, buffer);
     if (ret != GSERROR_OK) {
@@ -233,6 +233,11 @@ int32_t BufferQueueProducer::AttachBufferToQueueRemote(MessageParcel &arguments,
         reply.WriteInt32(ret);
         return 0;
     }
+    if (buffer == nullptr) {
+        BLOGN_FAILURE("Read buffer is nullptr");
+        reply.WriteInt32(GSERROR_INTERNAL);
+        return 0;
+    }
     ret = buffer->ReadBufferRequestConfig(arguments);
     if (ret != GSERROR_OK) {
         BLOGN_FAILURE("ReadBufferRequestConfig failed, return %{public}d", ret);
@@ -247,7 +252,7 @@ int32_t BufferQueueProducer::AttachBufferToQueueRemote(MessageParcel &arguments,
 int32_t BufferQueueProducer::DetachBufferFromQueueRemote(MessageParcel &arguments,
     MessageParcel &reply, MessageOption &option)
 {
-    sptr<SurfaceBuffer> buffer;
+    sptr<SurfaceBuffer> buffer = nullptr;
     uint32_t sequence;
     GSError ret = ReadSurfaceBufferImpl(arguments, sequence, buffer);
     if (ret != GSERROR_OK) {
@@ -255,6 +260,11 @@ int32_t BufferQueueProducer::DetachBufferFromQueueRemote(MessageParcel &argument
         reply.WriteInt32(ret);
         return 0;
     }
+    if (buffer == nullptr) {
+        BLOGN_FAILURE("Read buffer is nullptr");
+        reply.WriteInt32(GSERROR_INTERNAL);
+        return 0;
+    }
     ret = DetachBufferFromQueue(buffer);
     reply.WriteInt32(ret);
     return 0;
@@ -585,7 +595,7 @@ GSError BufferQueueProducer::GetLastFlushedBuffer(sptr<SurfaceBuffer>& buffer,
     return bufferQueue_->GetLastFlushedBuffer(buffer, fence, matrix);
 }
 
-GSError BufferQueueProducer::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
+GSError BufferQueueProducer::AttachBufferToQueue(sptr<SurfaceBuffer> buffer)
 {
     if (bufferQueue_ == nullptr) {
         return GSERROR_INVALID_ARGUMENTS;
@@ -593,7 +603,7 @@ GSError BufferQueueProducer::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
     return bufferQueue_->AttachBufferToQueue(buffer, InvokerType::PRODUCER_INVOKER);
 }
 
-GSError BufferQueueProducer::DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer)
+GSError BufferQueueProducer::DetachBufferFromQueue(sptr<SurfaceBuffer> buffer)
 {
     if (bufferQueue_ == nullptr) {
         return GSERROR_INVALID_ARGUMENTS;
diff --git a/surface/src/consumer_surface.cpp b/surface/src/consumer_surface.cpp
index f3a56022c55253b4f3ad95759925f538b735276b..340b01c144834d7cc2f01103d7ac491f00d43cc0 100644
--- a/surface/src/consumer_surface.cpp
+++ b/surface/src/consumer_surface.cpp
@@ -179,7 +179,7 @@ GSError ConsumerSurface::ReleaseBuffer(sptr<SurfaceBuffer>& buffer, int32_t fenc
     return ReleaseBuffer(buffer, syncFence);
 }
 
-GSError ConsumerSurface::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
+GSError ConsumerSurface::AttachBufferToQueue(sptr<SurfaceBuffer> buffer)
 {
     if (buffer == nullptr || consumer_ == nullptr) {
         return GSERROR_INVALID_ARGUMENTS;
@@ -188,7 +188,7 @@ GSError ConsumerSurface::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
     return consumer_->AttachBufferToQueue(buffer);
 }
 
-GSError ConsumerSurface::DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer)
+GSError ConsumerSurface::DetachBufferFromQueue(sptr<SurfaceBuffer> buffer)
 {
     if (buffer == nullptr || consumer_ == nullptr) {
         return GSERROR_INVALID_ARGUMENTS;
diff --git a/surface/src/producer_surface.cpp b/surface/src/producer_surface.cpp
index 2c7f9485a01bfe61e51a4a601f0183e4bad5d10c..d2d7f5f8c64ef0827b90dbfde9b677d3b059c92c 100644
--- a/surface/src/producer_surface.cpp
+++ b/surface/src/producer_surface.cpp
@@ -231,7 +231,7 @@ GSError ProducerSurface::ReleaseBuffer(sptr<SurfaceBuffer>& buffer, int32_t fenc
     return GSERROR_NOT_SUPPORT;
 }
 
-GSError ProducerSurface::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
+GSError ProducerSurface::AttachBufferToQueue(sptr<SurfaceBuffer> buffer)
 {
     if (buffer == nullptr) {
         return GSERROR_INVALID_ARGUMENTS;
@@ -248,7 +248,7 @@ GSError ProducerSurface::AttachBufferToQueue(sptr<SurfaceBuffer>& buffer)
     return ret;
 }
 
-GSError ProducerSurface::DetachBufferFromQueue(sptr<SurfaceBuffer>& buffer)
+GSError ProducerSurface::DetachBufferFromQueue(sptr<SurfaceBuffer> buffer)
 {
     if (buffer == nullptr) {
         return GSERROR_INVALID_ARGUMENTS;
