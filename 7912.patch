From 77c3281e9f66c244ba45c3bfca3286d63fe4fd0d Mon Sep 17 00:00:00 2001
From: wqq1104180120 <wuqiqiang1@huawei.com>
Date: Wed, 27 Dec 2023 14:13:45 +0800
Subject: [PATCH] =?UTF-8?q?=E4=BF=AE=E5=A4=8Dpc=E4=B8=8A=E5=9C=86=E8=A7=92?=
 =?UTF-8?q?=E9=94=AF=E9=BD=BF?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Signed-off-by: wqq1104180120 <wuqiqiang1@huawei.com>
---
 .../rs_property_drawable_bounds_geometry.cpp      | 15 +++++++++++++--
 1 file changed, 13 insertions(+), 2 deletions(-)

diff --git a/rosen/modules/render_service_base/src/property/rs_property_drawable_bounds_geometry.cpp b/rosen/modules/render_service_base/src/property/rs_property_drawable_bounds_geometry.cpp
index 3b03c7ccc1..cdc5131224 100644
--- a/rosen/modules/render_service_base/src/property/rs_property_drawable_bounds_geometry.cpp
+++ b/rosen/modules/render_service_base/src/property/rs_property_drawable_bounds_geometry.cpp
@@ -1145,11 +1145,22 @@ void RSBackgroundDrawable::Draw(RSRenderNode& node, RSPaintFilterCanvas& canvas)
     bool antiAlias = RSPropertiesPainter::GetBgAntiAlias() || !properties.GetCornerRadius().IsZero();
 #ifndef USE_ROSEN_DRAWING
     paint_.setAntiAlias(antiAlias);
-    canvas.drawRRect(RSPropertiesPainter::RRect2SkRRect(properties.GetRRect()), paint_);
+    // use drawrrect to avoid texture update in phone screen rotation scene.
+    if (RSSystemProperties::IsPhoneType()) {
+        canvas.drawRRect(RSPropertiesPainter::RRect2SkRRect(properties.GetRRect()), paint_);
+    } else {
+        canvas.drawRect(RSPropertiesPainter::Rect2SkRect(properties.GetBoundsRect()), paint_);
+    }
+
 #else
     brush_.SetAntiAlias(antiAlias);
     canvas.AttachBrush(brush_);
-    canvas.DrawRoundRect(RSPropertiesPainter::RRect2DrawingRRect(properties.GetRRect()));
+    // use drawrrect to avoid texture update in phone screen rotation scene
+    if (RSSystemProperties::IsPhoneType()) {
+        canvas.DrawRoundRect(RSPropertiesPainter::RRect2DrawingRRect(properties.GetRRect()));
+    } else {
+        canvas.DrawRect(RSPropertiesPainter::Rect2DrawingRect(properties.GetBoundsRect()));
+    }
     canvas.DetachBrush();
 #endif
 }
-- 
Gitee

