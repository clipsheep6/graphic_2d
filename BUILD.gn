# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/utils/wmlayout/wmlayout.gni")
import("graphic_config.gni")

group("default") {
  public_deps = [
    ":graphic.rc",
    "frameworks/dumper:gdumper",
    "frameworks/dumper:gdumper.ini",
    "frameworks/dumper:graphic_dumper_server",
    "rosen/samples/texgine:texgine_sample_align",
    "rosen/samples/texgine:texgine_sample_alignment",
    "rosen/samples/texgine:texgine_sample_bug",
    "rosen/samples/texgine:texgine_sample_calibrate",
    "rosen/samples/texgine:texgine_sample_decoration",
    "rosen/samples/texgine:texgine_sample_dynamic_font",
    "rosen/samples/texgine:texgine_sample_ellipsis",
    "rosen/samples/texgine:texgine_sample_emoji",
    "rosen/samples/texgine:texgine_sample_feature",
    "rosen/samples/texgine:texgine_sample_font_style",
    "rosen/samples/texgine:texgine_sample_glyph_position",
    "rosen/samples/texgine:texgine_sample_intrinsic_width",
    "rosen/samples/texgine:texgine_sample_layout",
    "rosen/samples/texgine:texgine_sample_mix",
    "rosen/samples/texgine:texgine_sample_shadow",
    "rosen/samples/texgine:texgine_sample_spacing",
    "rosen/samples/texgine:texgine_sample_strut",
    "rosen/samples/texgine:texgine_sample_text_color",
    "rosen/samples/texgine:texgine_sample_weight_style",
    "rosen/samples/texgine:texgine_sample_word_boundary",
  ]

  if (graphic_standard_feature_bootanimation_enable) {
    public_deps += [ "frameworks/bootanimation:bootanimation" ]
    public_deps += [ "frameworks/bootanimation:bootanimation_pics" ]
    public_deps += [ "frameworks/bootanimation:bootanimation_sounds" ]
  }
}

group("graphic_2d_test") {
  testonly = true

  public_deps = [
    "frameworks/opengl_wrapper/test:test",
    "frameworks/surface/test:test",
    "frameworks/vulkan_wrapper/test:test",
    "rosen/modules/composer:test",
    "rosen/modules/effect/test/unittest:test",
    "rosen/test/frame_analyzer:test",
    "rosen/test/render_service:test",
    "utils/color_manager:test",
    "utils/socketpair:test",
    "utils/sync_fence:test",
  ]
}

## Install graphic.rc to /system/etc/init/graphic.rc {{{
ohos_prebuilt_etc("graphic.rc") {
  source = "graphic.cfg"
  relative_install_dir = "init"
  part_name = "graphic_standard"
  subsystem_name = "graphic"
}

## Install graphic.rc to /system/etc/init/graphic.rc }}}

group("libsurface") {
  public_deps = [ "frameworks/surface:surface" ]
}

group("libfence") {
  public_deps = [ "frameworks/fence:libfence" ]
}

group("libgl") {
  public_deps = libgl
}

group("libgraphic_dumper_client") {
  public_deps = [ "frameworks/dumper:libgraphic_dumper_client" ]
}

group("libnative_image") {
  public_deps = [ "frameworks/surfaceimage:libnative_image" ]
}
