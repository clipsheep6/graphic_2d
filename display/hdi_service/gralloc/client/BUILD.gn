# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//drivers/adapter/uhdf2/uhdf.gni")

config("gralloc_client_public_config") {
  include_dirs = [
    "//drivers/peripheral/base",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/display/hdi_service/gralloc/include",

    #    "//drivers/adapter/uhdf2/include/hdi",
    #    "//third_party/bounds_checking_function/include",
  ]
}

group("hdi_gralloc_client") {
  deps = [
    ":libhdi_display_gralloc_client",
    ":libhdi_display_gralloc_proxy",
    ":libhdi_mapper_adapter",
  ]
  public_configs = [ ":gralloc_client_public_config" ]
}

ohos_shared_library("libhdi_display_gralloc_client") {
  include_dirs = [
    "//drivers/peripheral/base",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/display/hdi_service/gralloc/include",
  ]
  sources = [ "display_gralloc_client.cpp" ]
  deps = [
    ":libhdi_display_gralloc_proxy",
    ":libhdi_mapper_adapter",
    "$hdf_uhdf_path/hdi:libhdi",
    "$hdf_uhdf_path/host:libhdf_host",
    "$hdf_uhdf_path/ipc:libhdf_ipc_adapter",
    "$hdf_uhdf_path/osal:libhdf_utils",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//utils/native/base:utils",
  ]

  if (is_standard_system) {
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  subsystem_name = "hdf"
  part_name = "hdf"
}

ohos_shared_library("libhdi_display_gralloc_proxy") {
  include_dirs = [
    "//drivers/peripheral/base",
    "//drivers/peripheral/display/interfaces/include",
    "//drivers/peripheral/display/hdi_service/gralloc/include",
  ]
  sources = [ "allocator_proxy.cpp" ]
  deps = [
    "$hdf_uhdf_path/hdi:libhdi",
    "$hdf_uhdf_path/host:libhdf_host",
    "$hdf_uhdf_path/ipc:libhdf_ipc_adapter",
    "$hdf_uhdf_path/osal:libhdf_utils",
    "//foundation/graphic/standard/utils:buffer_handle",
    "//utils/native/base:utils",
  ]

  if (is_standard_system) {
    external_deps = [
      "hiviewdfx_hilog_native:libhilog",
      "ipc:ipc_core",
    ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  subsystem_name = "hdf"
  part_name = "hdf"
}

ohos_shared_library("libhdi_mapper_adapter") {
  include_dirs = [
    "//drivers/peripheral/base",
    "//drivers/peripheral/display/interfaces/include",
  ]

  sources = [ "mapper_adapter.cpp" ]
  deps = [
    "$hdf_uhdf_path/osal:libhdf_utils",
    "//drivers/peripheral/display/hal:hdi_display_gralloc",
  ]

  if (is_standard_system) {
    external_deps = [ "hiviewdfx_hilog_native:libhilog" ]
  } else {
    external_deps = [ "hilog:libhilog" ]
  }
  subsystem_name = "hdf"
  part_name = "hdf"
}
