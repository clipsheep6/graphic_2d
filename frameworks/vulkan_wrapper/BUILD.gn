# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import("//build/ohos.gni")

## Build libvulkan.so {{{
config("vulkan_config") {
  visibility = [ ":*" ]

  #defines = [ "EGL_WRAPPER_DEBUG_ENABLE" ]
  defines = [
    "VK_USE_PLATFORM_OHOS_OPENHARMONY",
    "VK_NO_PROTOTYPES",
    ]

  cflags = [
    "-fvisibility=hidden",
    "-fstrict-aliasing",
    "-Wall",
    "-Werror",
    "-g3",
  ]
}

config("vulkan_public_config") {
  include_dirs = [ 
    "include",
    "//drivers/peripheral/base",
    "//foundation/graphic/graphic_2d/frameworks/surface/include",
    "//foundation/graphic/graphic_2d/frameworks/inner_api/surface",
    ]
}

ohos_shared_library("vulkan") {
  sources = [
    "src/api_export.cpp",
    "src/driver.cpp",
    "src/driver_loader.cpp",
    "src/swapchain.cpp",
  ]
  configs = [ ":vulkan_config" ]

  public_configs = [ ":vulkan_public_config" ]

  public_deps = [
    # "//third_party/vulkan:vulkan_headers",
    # [todo] should use //third_party/vulkan
    "//foundation/graphic/graphic_2d/frameworks/vulkan_wrapper/external/vulkan:vulkan_headers",
    "//foundation/graphic/graphic_2d/frameworks/surface:surface",
  ]

  external_deps = [
    "hilog_native:libhilog",
  ]

  output_name = "vulkan"
  output_extension = "so"

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}

## Build libvulkan.so }}}

## Build vulkan_wrapper_native_test {{{
ohos_executable("vulkan_wrapper_native_test") {
  install_enable = true

  sources = [ "test/vulkan_wrapper_native_test.cpp",
             ]

  include_dirs = [
    # "include",
  ]

  defines = [
    "VK_USE_PLATFORM_OHOS_OPENHARMONY",
    "VK_NO_PROTOTYPES"
    ]


  deps = [
    # "//third_party/vulkan:vulkan_headers",
    # [todo] should use //third_party/vulkan
    "//foundation/graphic/graphic_2d/frameworks/vulkan_wrapper/external/vulkan:vulkan_headers",
  ]

  external_deps = [
    "hilog_native:libhilog",
  ]

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}
## Build vulkan_wrapper_native_test }}}

## Build triangle {{{
ohos_executable("triangle") {
  install_enable = true

  sources = [ "test/triangle.cpp",
              "test/VulkanDevice.cpp",
              "test/vulkanexamplebase.cpp",
              "test/VulkanSwapChain.cpp",
              "test/VulkanBuffer.cpp",
              "test/VulkanTools.cpp",
              "test/VulkanUtils.cpp",
              "test/VulkanInitializers.hpp",
             ]

  include_dirs = [
    "//foundation/graphic/graphic_2d/frameworks/surface/include",
    "//foundation/graphic/graphic_2d/interfaces/inner_api/surface",
    "//foundation/graphic/graphic_2d/interfaces/inner_api/common",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client",
    "//foundation/window/window_manager/interfaces/innerkits",
    "external",
    "test",
  ]

  defines = [
    "VK_USE_PLATFORM_OHOS_OPENHARMONY",
    "VK_NO_PROTOTYPES"
    ]


  deps = [
    "//foundation/graphic/graphic_2d/frameworks/surface:surface",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client:librender_service_client",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base:librender_service_base",
    # "//third_party/vulkan:vulkan_headers",
    # [todo] should use //third_party/vulkan
    "//foundation/graphic/graphic_2d/frameworks/vulkan_wrapper/external/vulkan:vulkan_headers",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics:2d_graphics",
    "//foundation/systemabilitymgr/safwk/interfaces/innerkits/safwk:system_ability_fwk",
    "//foundation/window/window_manager/wm:libwm",
    "//foundation/window/window_manager/wmserver:libwms",
    "//third_party/zlib:libz",
  ]

  external_deps = [
    "hilog_native:libhilog",
  ]

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}
## Build triangle }}}
