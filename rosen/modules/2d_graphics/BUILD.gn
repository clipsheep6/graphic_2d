# Copyright (c) 2022 Huawei Device Co., Ltd.. All rights reserved.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/standard/graphic_config.gni")
import("//foundation/graphic/standard/rosen/modules/2d_engine/rosen_text/config.gni")
import("//foundation/ace/ace_engine/ace_config.gni")

## Build 2d_graphics.so
ohos_shared_library("2d_graphics") {
  symlink_target_name = [ "libnative_drawing.so" ]

  sources = [
    "src/c/drawing_bitmap.cpp",
    "src/c/drawing_brush.cpp",
    "src/c/drawing_canvas.cpp",
    "src/c/drawing_color.cpp",
    "src/c/drawing_path.cpp",
    "src/c/drawing_pen.cpp",
    "src/draw/brush.cpp",
    "src/draw/color.cpp",
    "src/draw/core_canvas.cpp",
    "src/draw/path.cpp",
    "src/draw/pen.cpp",
    "src/effect/color_filter.cpp",
    "src/effect/color_space.cpp",
    "src/effect/filter.cpp",
    "src/effect/image_filter.cpp",
    "src/effect/mask_filter.cpp",
    "src/effect/path_effect.cpp",
    "src/effect/shader_effect.cpp",
    "src/engine_adapter/impl_factory.cpp",
    "src/engine_adapter/skia_adapter/skia_bitmap.cpp",
    "src/engine_adapter/skia_adapter/skia_camera.cpp",
    "src/engine_adapter/skia_adapter/skia_canvas.cpp",
    "src/engine_adapter/skia_adapter/skia_color_filter.cpp",
    "src/engine_adapter/skia_adapter/skia_color_space.cpp",
    "src/engine_adapter/skia_adapter/skia_image.cpp",
    "src/engine_adapter/skia_adapter/skia_image_filter.cpp",
    "src/engine_adapter/skia_adapter/skia_impl_factory.cpp",
    "src/engine_adapter/skia_adapter/skia_mask_filter.cpp",
    "src/engine_adapter/skia_adapter/skia_matrix.cpp",
    "src/engine_adapter/skia_adapter/skia_paint.cpp",
    "src/engine_adapter/skia_adapter/skia_path.cpp",
    "src/engine_adapter/skia_adapter/skia_path_effect.cpp",
    "src/engine_adapter/skia_adapter/skia_picture.cpp",
    "src/engine_adapter/skia_adapter/skia_shader_effect.cpp",
    "src/image/bitmap.cpp",
    "src/image/image.cpp",
    "src/image/picture.cpp",
    "src/text/text.cpp",
    "src/utils/camera3d.cpp",
    "src/utils/matrix.cpp",
  ]

  sources += [
    "$rosen_text_root/ui/font_collection.cpp",
    "$rosen_text_root/ui/typography_create.cpp",
    "$rosen_text_root/ui/typography.cpp",

    "$rosen_text_root/properties/font_collection_txt.cpp",
    "$rosen_text_root/properties/placeholder_run.cpp",
    "$rosen_text_root/properties/rosen_converter_txt.cpp",
    "$rosen_text_root/properties/text_style.cpp",
    "$rosen_text_root/properties/typography_create_txt.cpp",
    "$rosen_text_root/properties/typography_style.cpp",
    "$rosen_text_root/properties/typography_txt.cpp",
  ]

  include_dirs = [
    "include",
    "src",
    "src/engine_adapter",
    "//foundation/graphic/standard/interfaces/innerkits/surface",
    "$rosen_2d_engine_root",
    "$flutter_root/engine/flutter/third_party/txt/src",
    "//foundation/ace/ace_engine/frameworks",
  ]

  defines = [ "USE_ACE_SKIA" ]

  deps = [
    "//foundation/graphic/standard:libsurface",
    "//foundation/graphic/standard/rosen/build/flutter/libtxt:thirdparty_lib_txt_rosen_$current_os",
    "//utils/native/base:utilsecurec",
    "$ace_flutter_engine_root:flutter_engine_fml_$current_os",
  ]

  external_deps = [
    "hilog_native:libhilog",
    "multimedia_image_standard:image_native",
    "utils_base:utils",
  ]

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}

## Build 2d_graphics.so
ohos_shared_library("2d_graphics_canvaskit0310") {
  sources = [
    "src/draw/brush.cpp",
    "src/draw/color.cpp",
    "src/draw/core_canvas.cpp",
    "src/draw/path.cpp",
    "src/draw/pen.cpp",
    "src/effect/color_filter.cpp",
    "src/effect/color_space.cpp",
    "src/effect/filter.cpp",
    "src/effect/image_filter.cpp",
    "src/effect/mask_filter.cpp",
    "src/effect/path_effect.cpp",
    "src/effect/shader_effect.cpp",
    "src/engine_adapter/impl_factory.cpp",
    "src/engine_adapter/skia_adapter/skia_bitmap.cpp",
    "src/engine_adapter/skia_adapter/skia_camera.cpp",
    "src/engine_adapter/skia_adapter/skia_canvas.cpp",
    "src/engine_adapter/skia_adapter/skia_color_filter.cpp",
    "src/engine_adapter/skia_adapter/skia_color_space.cpp",
    "src/engine_adapter/skia_adapter/skia_image.cpp",
    "src/engine_adapter/skia_adapter/skia_image_filter.cpp",
    "src/engine_adapter/skia_adapter/skia_impl_factory.cpp",
    "src/engine_adapter/skia_adapter/skia_mask_filter.cpp",
    "src/engine_adapter/skia_adapter/skia_matrix.cpp",
    "src/engine_adapter/skia_adapter/skia_paint.cpp",
    "src/engine_adapter/skia_adapter/skia_path.cpp",
    "src/engine_adapter/skia_adapter/skia_path_effect.cpp",
    "src/engine_adapter/skia_adapter/skia_picture.cpp",
    "src/engine_adapter/skia_adapter/skia_shader_effect.cpp",
    "src/image/bitmap.cpp",
    "src/image/image.cpp",
    "src/image/picture.cpp",
    "src/text/text.cpp",
    "src/utils/camera3d.cpp",
    "src/utils/matrix.cpp",
  ]

  defines = [ "USE_CANVASKIT0310_SKIA" ]

  include_dirs = [
    "include",
    "src",
    "src/engine_adapter",
  ]

  deps = [
    "//foundation/graphic/standard:libsurface",
    # "//third_party/skia_canvaskit0310:skia",
  ]

  external_deps = [
    "hilog_native:libhilog",
    "multimedia_image_standard:image_native",
    "utils_base:utils",
  ]

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}
## Build 2d_graphics.so
