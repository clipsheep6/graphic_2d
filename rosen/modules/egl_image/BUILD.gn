# Copyright (C) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

config("egl_image_public_config") {
  include_dirs = [
    "include",
    "$graphic_2d_root/frameworks/surface/include",
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
    "$graphic_2d_root/rosen/modules/2d_graphics/src/drawing/engine_adapter",
  ]
  defines = gpu_defines
}

ohos_source_set("egl_image_src")
{
  platform = current_os
  if (platform == "mingw") {
    platform = "windows"
  } else if (platform == "tvos") {
    platform = "ios"
  }
  public_configs = [ ":egl_image_public_config" ]
  sources = [ "src/pixel_map_from_surface.cpp" ]

  deps = []
  if (defined(use_new_skia) && use_new_skia) {
    deps += [ "//third_party/skia:skia_$platform" ]
  } else {
    deps += [ "$ace_flutter_engine_root/skia:ace_skia_$platform" ]
  }
}

ohos_shared_library("egl_image") {
  sanitize = {
    cfi = true
    cfi_cross_dso = true
    debug = false
  }

  deps = [
    ":egl_image_src",
    "$graphic_2d_root:libgl",
    "$graphic_2d_root/rosen/modules/2d_graphics:2d_graphics",
    "$graphic_2d_root/rosen/modules/render_service_base:librender_service_base",
    "$graphic_2d_root/rosen/modules/render_service_base/src/platform:platform",
    "$graphic_2d_root/utils:scoped_bytrace",
    "$graphic_2d_root/utils:sync_fence",
  ]

  external_deps = [
    "c_utils:utils",
    "graphic_surface:surface",
    "hilog:libhilog",
    "hitrace:hitrace_meter",
    "image_framework:image_native",
  ]

  subsystem_name = "graphic"
  part_name = "graphic_2d"
}
