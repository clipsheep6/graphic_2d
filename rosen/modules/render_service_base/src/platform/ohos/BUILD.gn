# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

group("ohos") {
  public_deps = [ ":rosen_ohos_sources" ]
}

config("export_config") {
  include_dirs = [
    "//foundation/graphic/graphic_2d/rosen/include",
    "//foundation/graphic/graphic_2d/rosen/modules/composer/vsync/include",
    "//commonlibrary/c_utils/base/include",
    "//utils/system/safwk/native/include",
    "//foundation/graphic/graphic_2d/frameworks/surface/src",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src",
    "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/include",
    "//foundation/multimedia/image_framework/interfaces/innerkits/include",
  ]
}

ohos_source_set("rosen_ohos_sources") {
  public_configs = [ ":export_config" ]

  defines = [ "ROSEN_OHOS" ]
  defines += gpu_defines

  sources = [
    "backend/rs_surface_frame_ohos_raster.cpp",
    "backend/rs_surface_ohos_raster.cpp",
    "event_handler_ohos.cpp",
    "event_runner_ohos.cpp",
    "rs_event_detector.cpp",
    "rs_event_manager.cpp",
    "rs_log.cpp",
    "rs_parameters.cpp",
    "rs_render_service_client.cpp",
    "rs_render_service_connect_hub.cpp",
    "rs_render_service_connection_proxy.cpp",
    "rs_render_service_proxy.cpp",
    "rs_surface_frame_ohos.cpp",
    "rs_surface_ohos.cpp",
    "rs_surface_ohos_converter.cpp",
    "rs_system_properties.cpp",
    "rs_trace.cpp",
    "rs_vsync_client_ohos.cpp",
    "vsync_receiver_ohos.cpp",

    #screen_manager
    "../../screen_manager/rs_screen_capability.cpp",
    "../../screen_manager/rs_screen_data.cpp",
    "../../screen_manager/rs_screen_hdr_capability.cpp",
    "../../screen_manager/rs_screen_mode_info.cpp",
    "../../screen_manager/rs_screen_props.cpp",
    "../../screen_manager/rs_virtual_screen_resolution.cpp",

    #ipc_callbacks
    "../../ipc_callbacks/buffer_available_callback_proxy.cpp",
    "../../ipc_callbacks/buffer_available_callback_stub.cpp",
    "../../ipc_callbacks/rs_application_agent_proxy.cpp",
    "../../ipc_callbacks/rs_application_agent_stub.cpp",
    "../../ipc_callbacks/rs_occlusion_change_callback_proxy.cpp",
    "../../ipc_callbacks/rs_occlusion_change_callback_stub.cpp",
    "../../ipc_callbacks/rs_render_mode_change_callback_proxy.cpp",
    "../../ipc_callbacks/rs_render_mode_change_callback_stub.cpp",
    "../../ipc_callbacks/screen_change_callback_proxy.cpp",
    "../../ipc_callbacks/screen_change_callback_stub.cpp",
    "../../ipc_callbacks/surface_capture_callback_proxy.cpp",
    "../../ipc_callbacks/surface_capture_callback_stub.cpp",

    #interfaces
    "../../../../render_service_client/core/transaction/rs_interfaces.cpp",
  ]

  if (ace_enable_gpu) {
    sources += [
      "backend/rs_surface_frame_ohos_gl.cpp",
      "backend/rs_surface_ohos_gl.cpp",
    ]

    sources += [
      "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/render_context/cache_data.cpp",
      "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/render_context/memory_handler.cpp",
      "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/render_context/render_context.cpp",
      "//foundation/graphic/graphic_2d/rosen/modules/2d_graphics/src/render_context/shader_cache.cpp",
    ]
  }

  include_dirs = [
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base/include",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_base/src",
    "//commonlibrary/c_utils/base/include",
    "//utils/system/safwk/native/include",
    "//foundation/graphic/graphic_2d/prebuilts/librarys/gpu/include",
    "//drivers/peripheral/display/interfaces/include/",
    "//foundation/graphic/graphic_2d/rosen/modules/render_service_client/core",
    "//foundation/graphic/graphic_2d/utils/log",
  ]

  public_deps = [
    "//base/hiviewdfx/hicollie/interfaces/native/innerkits:libhicollie",
    "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
    "//base/hiviewdfx/hisysevent/interfaces/native/innerkits/hisysevent:libhisysevent",
    "//base/hiviewdfx/hitrace/interfaces/native/innerkits:hitrace_meter",
    "//base/notification/eventhandler/frameworks/eventhandler:libeventhandler",
    "//base/startup/init/interfaces/innerkits:libbeget_proxy",
    "//base/startup/init/interfaces/innerkits:libbegetutil",
    "//commonlibrary/c_utils/base:utils",
    "//foundation/barrierfree/accessibility/interfaces/innerkits/acfwk:accessibilityconfig",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//foundation/graphic/graphic_2d:libsurface",
    "//foundation/graphic/graphic_2d/rosen/modules/composer/vsync:libvsync",
    "//foundation/graphic/graphic_2d/utils:sync_fence",
    "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",
    "//foundation/resourceschedule/frame_aware_sched/interfaces/innerkits/frameintf:frame_trace_intf",
    "//foundation/resourceschedule/resource_schedule_service/soc_perf:socperf_client",
    "//foundation/systemabilitymgr/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//third_party/flutter/build/skia:ace_skia_ohos",
    "//third_party/libpng:libpng",
  ]

  if (ace_enable_gpu) {
    include_dirs += [ "//third_party/openssl/include" ]

    public_deps += [
      "//foundation/graphic/graphic_2d:libgl",
      "//third_party/openssl:crypto_source",
    ]
  }

  if (defined(graphic_2d_ext_configs.vendor_root)) {
    sources -= [ "rs_render_service_client.cpp" ]

    include_dirs += graphic_2d_ext_configs.librender_service_base_platform_ohos_ext_include_dirs

    sources +=
        graphic_2d_ext_configs.librender_service_base_platform_ohos_ext_sources
  }
}
