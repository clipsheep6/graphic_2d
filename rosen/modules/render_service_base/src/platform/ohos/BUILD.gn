# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/standard/graphic_config.gni")

group("ohos") {
    public_deps = [
      ":rosen_ohos_sources"
    ]
}

config("export_config") {
  include_dirs = [
    "//foundation/graphic/standard/rosen/include",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//foundation/graphic/standard/frameworks/surface/src",
    "//foundation/graphic/standard/rosen/modules/2d_graphics/src",
  ]
}

ohos_source_set("rosen_ohos_sources") {
  public_configs = [ ":export_config" ]

  defines = [ "ROSEN_OHOS" ]
  defines += gpu_defines

  sources = [
    "rs_log.cpp",
    "rs_platform_canvas.cpp",
    "rs_render_service_client.cpp",
    "rs_render_service_connect.cpp",
    "rs_render_service_proxy.cpp",
    "rs_surface_frame_ohos.cpp",
    "rs_surface_ohos.cpp",
    "rs_system_properties.cpp",
    "rs_vsync_client_ohos.cpp",
    "rs_surface_ohos_converter.cpp",
    "backend/rs_surface_frame_ohos_raster.cpp",
    "backend/rs_surface_ohos_raster.cpp",
    "backend/rs_surface_frame_ohos_gl.cpp",
    "backend/rs_surface_ohos_gl.cpp",
  ]

  include_dirs = [
    "//foundation/graphic/standard/rosen/modules/render_service_base/include",
    "//foundation/graphic/standard/rosen/modules/render_service_base/src",
    "//utils/native/base/include",
    "//utils/system/safwk/native/include",
    "//foundation/graphic/standard/prebuilts/librarys/gpu/include",
    "//drivers/peripheral/display/interfaces/include/",
    "//foundation/graphic/standard/rosen/modules/render_service_client/core",
  ]

  public_deps = [
    "//foundation/ace/ace_engine/build/external_config/flutter/skia:ace_skia_ohos",
    "//foundation/graphic/standard:libsurface",
    "//foundation/graphic/standard:libvsync_client",
    "//utils/native/base:utils",
    "//foundation/graphic/standard/rosen/modules/2d_graphics:2d_graphics",
  ]

  external_deps = [
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "samgr_L2:samgr_proxy",
    "startup_l2:syspara",
  ]
}
