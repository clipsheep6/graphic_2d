# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/standard/graphic_config.gni")
import("//third_party/wayland_standard/wayland_protocol.gni")

if (ace_enable_gpu) {
  ohos_executable("render_context_sample") {
    install_enable = true
    cflags = [
      "-Wall",
      "-Werror",
      "-Wno-unused-parameter",
      "-Wno-missing-field-initializers",
      "-Wno-unused-variable",
    ]

    sources = [
      "main.cpp",
      "render_context_sample.cpp",
    ]

    configs = []

    include_dirs = [
      "include",
      "//foundation/graphic/standard/rosen/modules/2d_graphics/include",
      "//foundation/graphic/standard/rosen/modules/2d_graphics/src",
      "//foundation/graphic/standard/rosen/modules/render_service_base/src",
      "//foundation/graphic/standard/rosen/modules/composer/hdi_backend/include",
      "//foundation/graphic/standard/interfaces/innerkits/vsync_module",
      "//foundation/graphic/standard/utils/sync_fence/export",
      "//foundation/graphic/standard/rosen/include/common",
      "//foundation/graphic/standard/rosen/modules/render_service_base/include",
    ]

    deps = [
      "//foundation/ace/ace_engine/build/external_config/flutter/skia:ace_skia_ohos",
      "//foundation/graphic/standard:libsurface",
      "//foundation/graphic/standard:libvsync_client",
      "//foundation/graphic/standard:libwmclient",
      "//foundation/graphic/standard:libwmservice",
      "//foundation/graphic/standard/frameworks/vsync:libvsync_module",
      "//foundation/graphic/standard/rosen/modules/2d_graphics:2d_graphics",
      "//foundation/graphic/standard/rosen/modules/composer:libcomposer",
      "//foundation/graphic/standard/rosen/modules/render_service_base:librender_service_base",
      "//foundation/graphic/standard/utils:sync_fence",
      "//third_party/zlib:libz",
    ]

    external_deps = [
      "hilog_native:libhilog",
      "multimedia_image_standard:image_native",
      "utils_base:utils",
    ]

    subsystem_name = "graphic"
    part_name = "graphic_standard"
  }
}

ohos_executable("drawing_sample_rs") {
  install_enable = true

  sources = [ "drawing_sample_rs.cpp" ]

  include_dirs = [
    "//foundation/graphic/standard/rosen/modules/2d_graphics/include",
    "//foundation/graphic/standard/rosen/modules/2d_graphics/src",
    "//foundation/graphic/standard/rosen/modules/render_service_base/src",
    "//foundation/graphic/standard/rosen/modules/render_service_base/include",
    "//foundation/graphic/standard/rosen/modules/render_service_client",
    "//foundation/graphic/standard/interfaces/innerkits/vsync_module",
    "//foundation/graphic/standard/rosen/include/common",
    "//foundation/windowmanager/interfaces/innerkits/wm",
  ]

  deps = [
    "//foundation/graphic/standard:libvsync_client",
    "//foundation/graphic/standard/rosen/modules/2d_graphics:2d_graphics",
    "//foundation/graphic/standard/rosen/modules/render_service_base:librender_service_base",
    "//foundation/graphic/standard/rosen/modules/render_service_client:librender_service_client",
    "//foundation/windowmanager/wm:libwm",
    "//third_party/zlib:libz",
  ]

  external_deps = [
    "hilog_native:libhilog",
    "multimedia_image_standard:image_native",
  ]

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}

ohos_executable("drawing_sample_canvaskit0310") {
  install_enable = true

  sources = [ "drawing_sample_canvaskit0310.cpp" ]

  include_dirs = [
    "//foundation/graphic/standard/rosen/modules/composer/hdi_backend/include",
    "//drivers/peripheral/display/interfaces/include",
    "//foundation/graphic/standard/rosen/include/common",
    "//foundation/graphic/standard/interfaces/innerkits/vsync_module",
    "//foundation/graphic/standard/interfaces/innerkits/common",
    "//foundation/graphic/standard/rosen/modules/composer/vsync/include",
    "//foundation/graphic/standard/rosen/modules/2d_graphics/include",
    "//foundation/graphic/standard/rosen/modules/2d_graphics/src",
  ]

  deps = [
    "//foundation/graphic/standard:libsurface",
    "//foundation/graphic/standard:libvsync_client",
    "//foundation/graphic/standard/rosen/modules/2d_graphics:2d_graphics_canvaskit0310",
    "//foundation/graphic/standard/rosen/modules/composer:libcomposer",
    "//foundation/graphic/standard/utils:libgraphic_utils",
    "//foundation/graphic/standard/utils:sync_fence",
  ]

  external_deps = [
    "hilog_native:libhilog",
    "ipc:ipc_core",
  ]

  part_name = "graphic_standard"
  subsystem_name = "graphic"
}
