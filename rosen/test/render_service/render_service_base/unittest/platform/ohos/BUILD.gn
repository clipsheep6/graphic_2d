# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/arkui/ace_engine/ace_config.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

module_output_path = "graphic/rosen_engine/render_service_base/platform/ohos"

##############################  RSRenderServiceBasePlatformTest  ##################################
ohos_unittest("RSRenderServiceBasePlatformTest") {
  module_out_path = module_output_path

  sources = [
    "rs_ashmem_helper_test.cpp",
    "rs_event_manager_test.cpp",
    "rs_innovation_test.cpp",
    "rs_jank_stats_test.cpp",
    "rs_log_test.cpp",
    "rs_render_service_client_test.cpp",
    "rs_render_service_proxy_test.cpp",
    "rs_surface_ohos_test.cpp",
    "rs_vsync_client_ohos_test.cpp",
    "rs_event_detector_test.cpp",
    "rs_render_service_connect_hub_test.cpp",
  ]

  configs = [
    ":render_test",
    "$ace_root:ace_test_config",
    "$graphic_2d_root/rosen/modules/render_service_base:export_config",
  ]

  include_dirs = [
    "$graphic_2d_root/rosen/modules/render_service_base/include",
    "$graphic_2d_root/rosen/modules/render_service_base/src",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/rosen/include",
    "$graphic_2d_root/rosen/test/include",
    "//commonlibrary/c_utils/base/include",
    "//utils/system/safwk/native/include",
    "$graphic_2d_root/prebuilts/librarys/gpu/include",
    "//drivers/peripheral/display/interfaces/include/",
    "$graphic_2d_root/rosen/modules/render_service_client/core",
    "$graphic_2d_root/utils/log",
  ]

  deps = [
    "$graphic_2d_root/rosen/modules/render_service_base:librender_service_base",
    "$graphic_2d_root/rosen/modules/render_service_client:librender_service_client",
    "//third_party/googletest:gtest_main",
  ]

  public_deps = [
    "$graphic_2d_root:libsurface",
    "$graphic_2d_root/rosen/modules/composer/vsync:libvsync",
    "$graphic_2d_root/utils:sync_fence",
    "//commonlibrary/c_utils/base:utils",
    "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",
  ]
  if (defined(use_new_skia) && use_new_skia) {
    deps += [ "//third_party/skia:skia_ohos" ]
    public_deps += [ "//third_party/skia:skia_ohos" ]
  } else {
    deps += [ "//third_party/flutter/build/skia:ace_skia_ohos" ]
    public_deps += [ "//third_party/flutter/build/skia:ace_skia_ohos" ]
  }

  if (ace_enable_gpu) {
    include_dirs += [ "//third_party/openssl/include" ]

    public_deps += [
      "$graphic_2d_root:libgl",
      "//third_party/openssl:libcrypto_shared",
    ]
  }

  external_deps = [
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "hitrace:hitrace_meter",
    "init:libbegetutil",
    "ipc:ipc_core",
    "samgr:samgr_proxy",
  ]

  subsystem_name = "graphic"
}

###############################################################################
config("render_test") {
  visibility = [ ":*" ]
  include_dirs = [
    "$ace_root",
    "$graphic_2d_root/rosen/modules/render_service_base",
  ]
}

group("unittest") {
  testonly = true

  deps = [ ":RSRenderServiceBasePlatformTest" ]
}
