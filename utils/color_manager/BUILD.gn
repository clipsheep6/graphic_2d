# Copyright (c) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

## Build color_manager.so {{{
config("color_manager_config") {
  visibility = [ ":*" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
    "-Wno-error=missing-braces",
    "-Wno-error=#warnings",
    "-Os",
  ]

  ldflags = [ "-Wl,--no-as-needed" ]
}

config("color_manager_public_config") {
  include_dirs = [ "export" ]
}

ohos_shared_library("color_manager") {
  if (!use_clang_android && !use_clang_ios) {
    sanitize = {
      cfi = true
      debug = false
    }
  }
  sources = [
    "src/color.cpp",
    "src/color_space.cpp",
    "src/color_space_convertor.cpp",
  ]

  configs = [ ":color_manager_config" ]

  public_configs = [ ":color_manager_public_config" ]

  if (use_mingw_win) {
    defines = graphic_decode_windows_defines
    public_deps = [
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/flutter/build/skia:ace_skia_windows",
    ]
  } else if (use_clang_mac) {
    defines = graphic_decode_mac_defines
    public_deps = [
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/flutter/build/skia:ace_skia_mac",
    ]
  } else if (use_clang_ios) {
    defines = graphic_decode_ios_defines
    public_deps = [
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/flutter/build/skia:ace_skia_ios",
    ]
  } else if (use_clang_android) {
    defines = graphic_decode_android_defines
    public_deps = [
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/flutter/build/skia:ace_skia_android",
    ]
    aosp_deps = [
      "shared_library:libEGL",
      "shared_library:libGLESv2",
      "shared_library:libnativewindow",
    ]
  } else {
    public_deps = [
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/flutter/build/skia:ace_skia_ohos",
    ]
  }
  subsystem_name = "graphic"
  part_name = "graphic_standard"
}

group("test") {
  testonly = true
  deps = [ "test:test" ]
}

## Build color_manager.so }}}

