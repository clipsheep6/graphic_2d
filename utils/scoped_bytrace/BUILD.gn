# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//foundation/graphic/graphic_2d/graphic_config.gni")

## Build scoped_bytrace.a {{{
config("scoped_bytrace_config") {
  visibility = [ ":*" ]

  cflags = [
    "-Wall",
    "-Werror",
    "-g3",
  ]
}

config("scoped_bytrace_public_config") {
  include_dirs = [ "export" ]
}

ohos_static_library("scoped_bytrace") {
  if (!use_clang_android && !use_clang_ios) {
    sanitize = {
      cfi = true
      debug = false
    }
  }
  sources = [ "src/scoped_bytrace.cpp" ]

  configs = [ ":scoped_bytrace_config" ]

  public_configs = [ ":scoped_bytrace_public_config" ]

  if (use_mingw_win) {
    defines = graphic_decode_windows_defines
    configs +=
        [ "//foundation/graphic/graphic_2d/mock:graphic_mock_hitrace_config" ]
    deps = [ "//foundation/graphic/graphic_2d/mock:graphic_mock_log" ]
  } else if (use_clang_mac) {
    defines = graphic_decode_mac_defines
    configs +=
        [ "//foundation/graphic/graphic_2d/mock:graphic_mock_hitrace_config" ]
    deps = [ "//foundation/graphic/graphic_2d/mock:graphic_mock_log" ]
  } else if (use_clang_ios) {
    defines = graphic_decode_ios_defines
    configs +=
        [ "//foundation/graphic/graphic_2d/mock:graphic_mock_hitrace_config" ]
    deps = [ "//foundation/graphic/graphic_2d/mock:graphic_mock_log" ]
  } else if (use_clang_android) {
    defines = graphic_decode_android_defines
    configs +=
        [ "//foundation/graphic/graphic_2d/mock:graphic_mock_hitrace_config" ]
    deps = [ "//foundation/graphic/graphic_2d/mock:graphic_mock_log" ]
  } else {
    deps = [ "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog" ]
    external_deps = [ "hitrace_native:hitrace_meter" ]
  }
  subsystem_name = "graphic"
  part_name = "graphic_standard"
}
## Build scoped_bytrace.a }}}
